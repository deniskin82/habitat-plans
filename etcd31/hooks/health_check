#!/bin/bash

set -euo pipefail

cd {{pkg.svc_path}}

curl_opts=""

if [[ "{{cfg.etcd-auto-tls}}" == "true" ]]; then
	curl_opts="${curl_opts} --insecure"
elif [[ "{{cfg.etcd-client-cert-auth}}" == "true" ]]; then
	if [[ -n "{{cfg.etcd-client-cert-path}}" ]]; then
		curl_opts="${curl_opts} --cacert {{cfg.etcd-peer-client-cert-path}}/ca.pem --cert {{cfg.etcd-peer-client-cert-path}}/{{sys.hostname}}.pem --key {{cfg.etcd-peer-client-cert-path}}/{{sys.hostname}}-key.pem"
	else
		curl_opts="${curl_opts} --insecure"
		curl_opts="${curl_opts} --cacert {{pkg.svc_static_path}}/ca.pem --cert {{pkg.svc_static_path}}/{{sys.hostname}}-client.pem --key {{pkg.svc_static_path}}/{{sys.hostname}}-client-key.pem"
	fi
fi

if curl -sS ${curl_opts} "{{cfg.etcd-http-proto}}://{{sys.ip}}:{{cfg.etcd-client-end}}/health" | grep -q "true"; then
  exit 0
fi

echo "etcd node unhealthy"
exit 2
